PyB
31.08.2011 - 14.02.2012 
by John Witulski: www.stups.uni-duesseldorf.de

1. Config:
    WAY A: Build jars 
    1.0: Checkout the Bparser from https://github.com/bendisposto/probparsers.git
    1.1: copy ASTPython.java to
     .../bparser/src/main/java/de/be4/classicalb/core/parser/analysis/python
    1.2: overwrite BParser.java  CliBParser.java  ConsoleOptions.java
     ParsingBehaviour.java inside the correct src folder
    1.3: generate the jar by typing "./gradlew jar" in the project-root-dir
    1.4: the jar files must be in the correct dir. see helpers.py Line 7-10
     This hard-codes path must be set manually at the moment

    WAY B: Copy jars 
    1.0: Checkout the Bparser from https://github.com/bendisposto/probparsers.git
    1.1: Checkout bparser-2.0.67.jar, prologlib-2.0.1.jar, parserbase-2.0.1.jar, cliparser-2.0.67.jar
    1.2: the jar files must be in the correct dir. see helpers.py Line 7-10
     This hard-codes path must be set manually at the moment


2. Run pyB:
    python pyB.py <FileName>
    e.g Filename or input.txt with the content like: "#PREDICATE 4-3=1" 


3. Run Tests:
    py.test
    the tests/ are in the tests folder


4. Features:
    - Evals arith. Preds like:   1+1=2
    - Evals set Preds like:   x:ID 
    - Evals set extentions like:  {a,b,c}
    - Evals quantified preds like: #(z).(z<4 & z>0) 
    - Evals Set Comprehensions like:  (1,2):{(x,y) | x>0 & x <4 & x/=0 or y/=x} 
    - Evals realtions, functions and sequences
    - Evals interval sum and pi
    - Evals itrations and closure
    - generalized conc and strings
    - Typechecking of the most preds


5. MISSING FEATURES:
    - infinite sets/sequences/relations
    - NAT and NAT1 is not infinite!
    - substitutions
    - sp. UNION / INTER buildins
    - min/max an the natural numbers - not ProB
    - lambda abstractions with more vars
    - and maybe more...;-)
    - NO IMPLEMENTATION: LTL and Event-B


6. How it works:
    6.1.PARSING:
     PyB uses the same java-parser like ProB with one exception: 
     A AST-visitor "ASTPython.java" gens. a String with pythoncode.
     This string is executed with "exec" in "pyB.py".
     (This needs to be changed for RPython to Jit it. e.g. through XML-parsing)
     The string is mapped via "exec" to the ASTNodes (python-classes) in
     "ast_nodes.py"

    6.2.TYPECHECKING: 
     A map ASTNode-> Type is created via the typeit method.
     It uses a unify method to handle unknown types like "S=V\/T T:POW(X)".
     This method is not fully implemented.
     The typing is necessery to eval. quantified preds:
     assumes that both sides of ops like (\/ or /=) have the same type.
     The TypeEnv(!=map) is filled with the unknown vars before a run.
     This assumes that an var which is not introduced in the vars section or
     the parameters of an opp is an quantified var or an error. This
     is handled in the get_type method of the env. The typin uses a stack of
     environments. Local Vars(e.g in ops) overwrite global vars (e.g VARIABLES) 
     and are added to a frame before typing if they are not quantified.

    6.3.INTERPRETATION:
     This AST is eval. via an AST-interpreter "interp.py"


7. FIXED BUGS:
    - replace depricated set module
    - implement AST Gen for Node with more than two children
        e.g. ASetExtensionExpression
    - move tests in seperated files
    - use new env interface inside tests
    - !, # set-comp and pi dont use correct enum
    - rename quantified variables in helper-funcs -solved by scoping
    - Maybe a BUG: there are no local vars. all vars are global
    - TODO: quantiefed vars must be added to the frame
    - Typing maybe fails if vars have the same name (unify)
    - TODO: Typing must throw "Typing-error" if after "one run" a var has an 
    "unknown-type"
    - sets and frozensets are mixed (e.g in POW)..fix that
    - not tested: sequences of sequences
    - BUG: mising String spaces (maybe a parser bug- java code) 
    - enable function applications (4.1.9) with many args


8. TODO-LIST:
8.1 Features
    - write a build-script
    - enable infinite sets
    - Implement UNION and INTER
    - Implement B-mch-Operations
    - Implement Rodin interface
    - Implement Definitions
    - set mch-para to "good" values
    - enum set which have no expl. elements
    - Maybe all asserts inside the typechecker must be replaced by 
      unify_equal()
8.2 Refactoring / small fixes
    - throw better Typeexceptions
    - write prop. python module (e.g for min max int)
    - Typeerrors are scattered through the whole code via asserts
    - move name-learning of sets in typing from AUnequal/EqualPredicate to
      unify
    - remove fix value/type from tests if possible
    - write more scoping tests
    - write more AST-Gen tests
    - Maybe the implemenation has to be fixed if infinite sets are introduced
    - S=NAT Type(S)=Pow(NAT) (lose of info)
    - MAYBE implement deferredSets
    - check if all astnodes return types (if they have to)
    - Think of unifications like: "it is A or B" e.g. perm(s)
    - Dont create new instances of IntegerType if not nec.
8.3 minor problems
    - Dont assume that all functions are 2-tuple: otherwise crash
    - typechecker and interpreter has undefined behavior if there is a error in 
      the java-Bparser
    - Tests ignore Frames and Scopes.
    - not tested: append/preprend more than one element - possible?
8.4 Bugs:
    - MAYBE BUG: eval of preds changes value_stack
    - Vars are added to a Frame at the wrong position!
    - typechecking the settype contains data, this data is not valid 
      e.g. after set union, inters. diff.
    - unknown-nodes like NaturalSetExpression create atype == atype.data
    - maybe there is a unify Bug. unify unifies with the first POW in a 
      type-tree



9. AST-Node Checklist
 9.1 DONE:
    caseStart (no change)
    caseAAbstractMachineParseUnit 
    caseAPredicateParseUnit
    caseAMachineHeader (BUG)
    caseASetsMachineClause
    caseAVariablesMachineClause
    caseAConstantsMachineClause
    caseAPropertiesMachineClause
    caseAConstraintsMachineClause
    caseAInitialisationMachineClause
    caseAInvariantMachineClause
    caseAAssertionsMachineClause
    caseADeferredSet (BUG)
    caseAEnumeratedSet
    caseAConjunctPredicate
    caseANegationPredicate
    caseADisjunctPredicate
    caseAImplicationPredicate
    caseAEquivalencePredicate
    caseAUniversalQuantificationPredicate
    caseAExistentialQuantificationPredicate
    caseAEqualPredicate
    caseAUnequalPredicate
    caseABelongPredicate
    caseANotBelongPredicate
    caseAIncludePredicate
    caseAIncludeStrictlyPredicate
    caseANotIncludePredicate
    caseANotIncludeStrictlyPredicate
    caseALessEqualPredicate
    caseALessPredicate
    caseAGreaterEqualPredicate
    caseAGreaterPredicate
    caseAIdentifierExpression (only in/out)
    caseAStringExpression
    caseAIntegerExpression
    caseAEmptySetExpression
    caseANaturalSetExpression
    caseANatSetExpression
    caseANat1SetExpression
    caseAAddExpression
    caseAMinusOrSetSubtractExpression
    caseAMultOrCartExpression
    caseADivExpression
    caseAModuloExpression
    caseAMaxExpression
    caseAMinExpression
    caseACardExpression
    caseAGeneralSumExpression
    caseAGeneralProductExpression
    caseACoupleExpression
    caseAComprehensionSetExpression
    caseAPowSubsetExpression
    caseAPow1SubsetExpression
    caseAFinSubsetExpression (no test)
    caseAFin1SubsetExpression (no test)
    caseASetExtensionExpression
    caseAIntervalExpression
    caseAUnionExpression
    caseAIntersectionExpression
    caseAGeneralUnionExpression
    caseAGeneralIntersectionExpression
    caseARelationsExpression
    caseAIdentityExpression
    caseAReverseExpression
    caseAFirstProjectionExpression
    caseASecondProjectionExpression
    caseACompositionExpression
    caseADirectProductExpression
    caseAParallelProductExpression
    caseAIterationExpression
    caseAReflexiveClosureExpression
    caseADomainExpression
    caseARangeExpression
    caseAImageExpression
    caseADomainRestrictionExpression
    caseADomainSubtractionExpression
    caseARangeRestrictionExpression
    caseARangeSubtractionExpression
    caseAOverwriteExpression
    caseAPartialFunctionExpression
    caseATotalFunctionExpression
    caseAPartialInjectionExpression
    caseATotalInjectionExpression
    caseAPartialSurjectionExpression
    caseATotalSurjectionExpression
    caseALambdaExpression
    caseASeqExpression
    caseASeq1Expression
    caseAIseqExpression
    caseAPermExpression
    caseAEmptySequenceExpression
    caseASequenceExtensionExpression
    caseASizeExpression
    caseAFirstExpression
    caseALastExpression
    caseAFrontExpression
    caseATailExpression
    caseARevExpression
    caseAConcatExpression
    caseAInsertFrontExpression
    caseAInsertTailExpression
    caseARestrictFrontExpression
    caseARestrictTailExpression
    caseAGeneralConcatExpression
    caseAFunctionExpression
    caseABoolSetExpression
    caseATrueExpression
    caseAFalseExpression
    caseAExpressionDefinition
    caseADefinitionsMachineClause
    caseADefinitionExpression
    caseAAssignSubstitution
    caseAParallelSubstitution
    caseAConvertBoolExpression
    caseABecomesSuchSubstitution


 9.2 NOT IMPLEMENTED:
    caseAExpressionParseUnit
    caseASubstitutionParseUnit
    caseAMachineClauseParseUnit
    caseAOppatternParseUnit
    caseAUndefArgpattern
    caseADefArgpattern
    caseARefinementMachineParseUnit
    caseAImplementationMachineParseUnit
    caseADefinitionFileParseUnit
    caseAInArgtype
    caseAOutArgtype
    caseAExtendsContextClause
    caseASetsContextClause
    caseAConstantsContextClause
    caseAAxiomsContextClause
    caseATheoremsContextClause
    caseARefinesModelClause
    caseASeesModelClause
    caseAVariablesModelClause
    caseAInvariantModelClause
    caseAJoinArgtype
    caseATheoremsModelClause
    caseAVariantModelClause
    caseASeesMachineClause
    caseAPromotesMachineClause
    caseAUsesMachineClause
    caseAIncludesMachineClause
    caseAExtendsMachineClause
    caseAImportsMachineClause
    caseAConcreteVariablesMachineClause
    caseAAbstractConstantsMachineClause
    caseAValuesMachineClause
    caseALocalOperationsMachineClause
    caseAOperationsMachineClause
    caseAMachineReference
    caseAPredicateDefinition
    caseASubstitutionDefinition
    caseAFileDefinition
    caseAValuesEntry
    caseAOperation
    caseAWitness
    caseATruePredicate
    caseAFalsePredicate
    caseAFinitePredicate
    caseAPartitionPredicate
    caseADefinitionPredicate
    caseAPrimedIdentifierExpression
    caseAMaxIntExpression (no test)
    caseAMinIntExpression (no test)
    caseAIntegerSetExpression
    caseANatural1SetExpression
    caseAIntSetExpression
    caseAStringSetExpression
    caseAMinusExpression
    caseAUnaryExpression
    caseAMultiplicationExpression
    caseACartesianProductExpression
    caseAPowerOfExpression
    caseASuccessorExpression
    caseAPredecessorExpression
    caseAProverComprehensionSetExpression
    caseASetSubtractionExpression
    caseAQuantifiedUnionExpression
    caseAQuantifiedIntersectionExpression
    caseARingExpression
    caseAClosureExpression
    caseAPartialBijectionExpression
    caseATotalRelationExpression
    caseASurjectionRelationExpression
    caseATotalSurjectionRelationExpression
    caseATransFunctionExpression
    caseATransRelationExpression
    caseAIseq1Expression
    caseATreeExpression
    caseABtreeExpression
    caseAConstExpression
    caseATopExpression
    caseASonsExpression
    caseAPrefixExpression
    caseAPostfixExpression
    caseASizetExpression
    caseAMirrorExpression
    caseARankExpression
    caseAFatherExpression
    caseASonExpression
    caseASubtreeExpression
    caseAArityExpression
    caseABinExpression
    caseALeftExpression
    caseARightExpression
    caseAInfixExpression
    caseAStructExpression
    caseARecExpression
    caseARecordFieldExpression
    caseARecEntry
    caseABlockSubstitution
    caseASkipSubstitution
    caseAPreconditionSubstitution
    caseAAssertionSubstitution
    caseAChoiceSubstitution
    caseAChoiceOrSubstitution
    caseAIfSubstitution
    caseAIfElsifSubstitution
    caseASelectSubstitution
    caseASelectWhenSubstitution
    caseACaseSubstitution
    caseACaseOrSubstitution
    caseAAnySubstitution
    caseALetSubstitution
    caseABecomesElementOfSubstitution
    caseAVarSubstitution
    caseASequenceSubstitution
    caseAFuncOpSubstitution
    caseAOpSubstitution
    caseAOpWithReturnSubstitution
    caseAWhileSubstitution
    caseADefinitionSubstitution


 9.3 NO IMPLEMENTATION PLANED:
    caseACsppattern
    caseAEventBContextParseUnit
    caseAEventBModelParseUnit
    caseAEventsModelClause
    caseAEvent
    caseAOrdinaryEventstatus
    caseAAnticipatedEventstatus
    caseAConvergentEventstatus
    caseAEventBComprehensionSetExpression
    caseAEventBIdentityExpression
    caseAEventBFirstProjectionExpression
    caseAEventBFirstProjectionV2Expression
    caseAEventBSecondProjectionExpression
    caseAEventBSecondProjectionV2Expression
    caseATotalBijectionExpression
    